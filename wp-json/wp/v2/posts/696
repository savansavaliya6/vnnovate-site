{"id":696,"date":"2022-01-24T17:57:00","date_gmt":"2022-01-24T17:57:00","guid":{"rendered":"http:\/\/tblocks.com\/?p=696"},"modified":"2022-11-28T21:31:31","modified_gmt":"2022-11-28T21:31:31","slug":"how-to-manage-and-prioritize-technical-debt","status":"publish","type":"post","link":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/","title":{"rendered":"Managing And Prioritizing Technical Debt"},"content":{"rendered":"\n<p>Technical debt occurs when software development teams choose easy, or quick solutions to quickly deliver short-term projects due to time, budget, or other constraints. These solutions, however, are not reliable for long-term goals and regularly cause bugs or security concerns and take additional effort to fix later.<\/p>\n\n\n\n<p>On average, engineers spend almost 33% of their total time dealing with technical debt. In a&nbsp;<a href=\"https:\/\/www.mckinsey.com\/business-functions\/mckinsey-digital\/our-insights\/tech-debt-reclaiming-tech-equity\" target=\"_blank\" rel=\"noreferrer noopener\">McKinsey survey<\/a>, it was found that 10-20% of the total technology budget is reserved for resolving technical debt issues. Moreover, it was estimated that the amount of tech debt is 20-40% of the value of the entire technology. For larger organizations, this can mean hundreds of millions of dollars of unpaid debt.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><strong>What is technical debt?<\/strong><\/h2>\n\n\n\n<p>Technical debt is a lot like financial debt. With financial debt you borrow money today and have to pay the money back with interest tomorrow. Technical debt is similar, but instead of borrowing money you are borrowing or shifting time. Instead of building or designing something today with greater attention to detail, things are built \u201cgood enough\u201d today with the expectation that it\u2019ll get fixed later. But, like monetary debt, technical debt isn\u2019t a 1 to 1 trade. Shortcuts taken today typically take more time to fix in the future than they would have to implement differently to begin with.<\/p>\n\n\n\n<p>Most times, software development teams are in a hurry to deliver new products and solutions. So, they choose a quick and easy fix over a more reliable long-term solution. Even though the latter is more complex and time-consuming, it can save unnecessary maintenance costs later.<\/p>\n\n\n\n<p>Example: Instead of coding a platform or application using microservices, a development team builds something as a single application with all functions operating internal to the application.<\/p>\n\n\n\n<p>While this increase speed to launch, to be scalable an app needs to operate with micro-service architecture, which means at a later time the developers will need to break up the app while maintaining the existing code base and migrating changes between both pipelines.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Prioritizing the Technical Debt Backlog<\/h2>\n\n\n\n<p>When technical debt is left unattended for a long time, it poses a huge problem. This happens when organizations push the issues to the background, hoping for them to get resolved themselves or they end up focusing their efforts in a different direction. Sometimes, developers, too, compensate for technical debt by working on another project, in which the possibility for technical debt is less.<\/p>\n\n\n\n<p>For instance, if the delivery of several projects is linked to a key project that was developed by adopting a quick solution, then the entire chain of deliverables may get affected, leading to insurmountable technical debt. Developers must fix the issues in the existing project before moving further to ensure the issues do not amplify in the projects aligned with it. It\u2019s during such times that organizations realize the factors governing a debt\u2019s worth are frequently modified codes, the time required to fix errors, etc. You need to prioritize the fixes to ensure other deliverables are not affected.<\/p>\n\n\n\n<p>Follow an 80\/20 approach when forming a technical debt strategy to improve the development of code paths that you use more frequently. While this approach does not eliminate technical debt, it helps manage it more efficiently. If there is an issue in the software that does not affect common development activities, you can leave it unattended to ensure your team works in the right direction.<\/p>\n\n\n\n<p>In short, you are moving the inconsequential debt to the bottom of your technical debt pile, focusing instead on the overall technical debt incurred by all projects combined. It is best to accept that you cannot wipe out the entire technical debt at once. Release your fixes at small intervals but in continuous batches.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">How Does Technical Debt Impact Business Owners?<\/h2>\n\n\n\n<p>Understanding technical debt helps in the proper planning and management of software. It can help planners understand that cutting corners in the short term can lead to higher costs in the long term.<\/p>\n\n\n\n<p>Better planning of technical debt is helpful for the evolution of software, as it can govern the success or failure of your software projects. It guides developers on how a product can be managed and made more efficient over the long run.<\/p>\n\n\n\n<p>Technical debt is critical for most business owners, managers, developers, and engineers. When ignored, it can result in higher development costs and smaller rewards for a business. Fully understanding the concept of technical debt and taking measures to minimize it can help a business prosper.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">How to Calculate Technical Debt?<\/h2>\n\n\n\n<p>Technical debt is not a quantified variable, so, it can be difficult to calculate it. This is primarily because developers cannot gauge how much work would be needed to eliminate technical debt, where too many contributing factors exist.<\/p>\n\n\n\n<p>However, a simple ratio can be used to explain the relationship between the cost to fix the software (Remediation Cost) and the cost of developing it (Development Cost). This ratio is called the Technical Debt Ratio (TDR).<\/p>\n\n\n\n<p>Technical Debt Percentage = (Remediation Cost \/ Development Cost) x 100%<\/p>\n\n\n\n<p>As a thumb rule, TDR equal to or less than 5% is considered good, while a higher TDR score tells us the software is of lower quality.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Types of Technical Debt<\/h2>\n\n\n\n<p>Technical debt is not always bad. Just as smart planning of financial debt helps one reach goals faster, managing technical debt with the right strategies can be fruitful for a company. Classifying technical debts helps communicate and address issues, and makes them easier to handle.<\/p>\n\n\n\n<p>Tech debts can be divided into three main types:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Deliberate or Planned Technical Debt<\/h3>\n\n\n\n<p>This type of debt originates when an organization chooses to generate technical debt despite being fully aware of the consequences, including risks and costs. Usually, developers know the right and the quicker way of accomplishing a task. Sometimes, the quicker way can be the right way, especially when you need to quickly launch a product. However, the team may ignore small errors due to a shorter delivery timeline.<\/p>\n\n\n\n<p>While going for a quicker solution, it is always good to consider how much time could be saved while launching a feature and what the cost of repaying the incurred debt could be after the reforms are made.<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Addressing Deliberate Technical Debt Issue<\/h4>\n\n\n\n<p>It is useful to keep calculating this technical debt while you are working on a quick, short-term solution. This will help you prepare to tackle it in the longer run.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Accidental Design Technical Debt<\/h3>\n\n\n\n<p>Software teams try to balance things by thinking ahead while designing software systems. They try to future-proof their designs, taking into consideration simplicity and quicker delivery. But, with the evolution of new systems and requirements, the team might realize their system is imperfect and outdated, leading to accidental design technical debt. This occurs due to positive changes in business and technology that may provide better solutions. This translates into an immediate cost as a new feature needs to be added to an existing design.<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Addressing Accidental Design Technical Debt<\/h4>\n\n\n\n<p>Designing the perfect software is tough, as you must keep it updated with the latest technological trends. Over-engineering the system and deliberately slowing down the development process is a method to lessen this type of technical debt.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Bit Rot Technical Debt<\/h3>\n\n\n\n<p>This type of technical debt occurs when software gradually encounters unnecessary complexity due to a lot of incremental changes. It happens when developers \u2013 who might not fully understand the initial design and intended function \u2013 make incremental changes, leading to complexity and breaking the code. It results in deteriorating the software, leading to problems with usability, and causing errors.<\/p>\n\n\n\n<h4 class=\"wp-block-heading\">Addressing Bit Rot Technical Debt<\/h4>\n\n\n\n<p>Avoiding this type of technical debt requires consistent countermeasures. Software teams must take time to understand the design, incrementally improve it, refactor, and clean up bad code.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Causes of Technical Debt<\/h2>\n\n\n\n<p>Shorter delivery timelines of software projects drive up the instances of technical debt. Some of the other factors are:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Time Pressure<\/h3>\n\n\n\n<p>Development teams are mostly under pressure and release applications with incomplete features. The solutions provided lack the key capabilities necessary for the smooth running of software.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Continuous Change<\/h3>\n\n\n\n<p>Sometimes, even a full-featured solution introduced in the market may prove to be outdated. The reason is increasing customer expectations and the quick evolution of technology.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Outdated Technology<\/h3>\n\n\n\n<p>Most modern apps involve several coding languages, developer frameworks, and libraries that may become obsolete and not support the system in the long run. For example, today\u2019s Python can be tomorrow\u2019s Visual Basic. Outdated technology is one of the main factors causing technical debt.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">The Right Balance between Speed and Quality<\/h2>\n\n\n\n<p>The quality and performance of software are most critical to providing a good user experience. However, how soon it reaches the market is equally important to attain business goals. Managing technical debt should be a fine balance between quality and speed. Quick turn-around time means the organization meets deadlines.<\/p>\n\n\n\n<p>Less experienced developers are tempted to deliver quick results. They ignore the debt that piles up in the background. For organizations creating business apps themselves or appointing less professional developers, the risk of technical debt is higher.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Effects of Technical Debt<\/h2>\n\n\n\n<p>There are five ways in which tech debt affects a business:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Impacts Growth<\/h3>\n\n\n\n<p>Teams have to spend more time figuring out ways to reduce the technical debt accumulated during past projects. Instead of working on updates and new features, more time is wasted on resolving old issues. Technical debt is paid in the form of new features and updates. This hinders the overall growth of the organization.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Poor Code<\/h3>\n\n\n\n<p>As developers are hard-pressed for time, they often take a quicker route to meet deadlines. They often skip the traditional protocols for designing clean and organized codes and deliver low readability codes. Although this practice helps a project meet the deadline, it carries forward challenges for programmers, affecting their ability to efficiently work on the project in the future. Technical debt associated with poor design codes results in backlog and has to be cleaned up later.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">More Volatile<\/h3>\n\n\n\n<p>A semi-perfect design delivered within the time limit can help uplift a company but may also have serious consequences. It can result in the volatile performance of the product and is susceptible to bugs, system crashes, and much more. A quick-release design incurs technical debt because of the volatile performance of the software.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Lower Productivity<\/h3>\n\n\n\n<p>Technical debt drains out the overall productivity of an organization. Sprucing up poorly written codes requires more time when simple enhancements are needed, affecting productivity. This time taken by the development teams to fix older issues postpones other important projects and causes technical debt.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Minimal Tested Designs<\/h3>\n\n\n\n<p>Testing teams are forced to speed up their processes to meet deadlines. During this time, they might end up missing the critical testing phase. This hurts the performance and stability of the released design, which was rushed through minimal testing. Eventually, teams have to go back and carry out the tests they skipped in the past. The result? Technical debt.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Is Technical Debt Good?<\/h2>\n\n\n\n<p>There can be good and bad reasons for technical debt. It is important to know the reasons for technical debt so that it does not slow down an organization\u2019s progress.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">When is tech debt good?<\/h3>\n\n\n\n<p>When delivery is more important than cleaner codes, it is okay to incur technical debt. If a product works for the user despite its bugs, then the company records an overall increase in revenue. This is when a technical debt can prove to be beneficial.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">When is tech debt bad?<\/h3>\n\n\n\n<p>When debt arises because developers choose to focus on areas that are more innovative but less important, then it is considered a bad reason for incurring technical debt.<\/p>\n\n\n\n<p>Even when a company chooses a messier option for quicker delivery, this piece of the product has to be re-designed in the future to add functionality. The longer an organization waits to resolve the issues, the more the technical debt.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">How to Identify Technical Debt?<\/h2>\n\n\n\n<p>There are some warning signs displayed by the software that leads to technical debt:<\/p>\n\n\n\n<ul>\n<li><strong>User Feedback<\/strong>: The most prominent indication of tech debt is user feedback. The sole purpose of the software is to serve the user, and when the UX is poor, it may be because of unpaid technical debts.To clear off the continued accumulation of old technical debt, find out how users behave while using the software. Search the areas where they struggle and why they leave the app altogether. Later, review the code construction of those areas and fix the software performance for a better UX.<\/li>\n<\/ul>\n\n\n\n<ul>\n<li><strong>Listen to Your Software<\/strong>: Software speaks loud when it needs help. You can also monitor load speeds, test speeds, and performance issues.<br><\/li>\n\n\n\n<li><strong>A Good Coder Can Smell Tech Debt<\/strong>: Technical debt makes a code incomprehensible and results in code smells. An experienced coder can easily identify logic errors and problems that may impact the overall software performance. The errors must be fixed in time to prevent a hefty technical debt.<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">How to Manage Technical Debt?<\/h2>\n\n\n\n<p>Following are the primary methods by which you can control your technical debts:<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Minimizing Creation of Debt in the First Place<\/h3>\n\n\n\n<p>When a team is less experienced, more debt is generated. Similarly, when there is pressure on time, more debt is generated. Developers tend to deliver low-quality work when not given sufficient time, causing technical debt. Minimizing debt on new solutions is the best practice to lower your overall debt. Offer more time to developers so that they make their best effort to deliver a high-quality solution in the first place.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Paying Off the Existing Debt Efficiently<\/h3>\n\n\n\n<p>Existing technical debts can be managed with the help of the following practices:<\/p>\n\n\n\n<ul>\n<li>Going for rigorous automated test development<\/li>\n\n\n\n<li>Choosing a strict refactoring schedule<\/li>\n\n\n\n<li>Hiring competent team members<\/li>\n\n\n\n<li>Avoiding low-quality developers<br><\/li>\n<\/ul>\n\n\n\n<p>Low-quality developers create more debt even when they work to solve existing bugs. Hiring a non-skilled team to solve existing problems is not always the best solution. A better option is to build from scratch and check for the lost revenue due to an inferior and incompetent product.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Test and Test Again<\/h3>\n\n\n\n<p>Automated testing procedures are the best solution for reducing technical debt. While hiring professionals, enquire what tools they use for testing and what their code review process is. Respect the time the team requires, as the more you pressurize a team, the more debt they will generate by cutting corners to deliver quicker results. You can also check third-party tools to assess code quality and ensure that you have opted for the best team.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Paying off Technical Debt<\/h2>\n\n\n\n<p>Following are the methods for paying off technical debt:<\/p>\n\n\n\n<ul>\n<li><strong>Waive off the Requirement<\/strong>: Under this method, organizations decide to go with the software as it is, without considering future requirements.<br><\/li>\n\n\n\n<li><strong>Refactoring<\/strong>: Applications are refactored to reduce complexity, remove duplicates, and improve the code structure. This helps improve the code\u2019s internal structure without changing the initial behavior of a program.<br><\/li>\n\n\n\n<li><strong>Replacing the Application<\/strong>: Organizations may also consider replacing the application completely to pay off the technical debt. However, this method may introduce a new technical debt.<\/li>\n<\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Conclusion<\/h2>\n\n\n\n<p>When technical debt is properly handled, it enables more productive conversations and strengthens the team. It is important to understand that tech debt will always exist while creating software and applications. Focus on how technical debt can slow your process down and come up with solutions to increase productivity. You can do this by keeping a close watch on the software performance and auditing it periodically.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Do you have technical debt? Read this article from our DevOps team to learn how to prioritize your technical debt and get yourself back on course.<\/p>\n","protected":false},"author":9,"featured_media":697,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"content-type":""},"categories":[1],"tb_industry":[],"tb_solution":[223,263],"tb_technology":[],"acf":{"tb_author":1099,"categories":1,"primary_industry":"automotive","industries":false,"primary_solution":"software-engineering","solutions":[223,263],"primary_technology":false,"technologies":false},"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v19.14 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>What is Technical Debt and how to Manage &amp; Prioritize It?<\/title>\n<meta name=\"description\" content=\"Technical debt occurs when software development teams choose easy, or quick solutions to deliver short-term projects with the idea they will get fixed later.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"What is Technical Debt and how to Manage &amp; Prioritize It?\" \/>\n<meta property=\"og:description\" content=\"Technical debt occurs when software development teams choose easy, or quick solutions to deliver short-term projects with the idea they will get fixed later.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\" \/>\n<meta property=\"og:site_name\" content=\"Techblocks\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/TechBlocks\/\" \/>\n<meta property=\"article:published_time\" content=\"2022-01-24T17:57:00+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-11-28T21:31:31+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/11\/Tech-Debt-Header-scaled-1.webp\" \/>\n\t<meta property=\"og:image:width\" content=\"2560\" \/>\n\t<meta property=\"og:image:height\" content=\"1209\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/webp\" \/>\n<meta name=\"author\" content=\"Sabih Siddiqui\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@techblocks\" \/>\n<meta name=\"twitter:site\" content=\"@techblocks\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Sabih Siddiqui\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"12 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Article\",\"@id\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\"},\"author\":{\"name\":\"Sabih Siddiqui\",\"@id\":\"https:\/\/tblocks.com\/#\/schema\/person\/aeda39b89c2f748b48ec4c21d59e389b\"},\"headline\":\"Managing And Prioritizing Technical Debt\",\"datePublished\":\"2022-01-24T17:57:00+00:00\",\"dateModified\":\"2022-11-28T21:31:31+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\"},\"wordCount\":2578,\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/tblocks.com\/#organization\"},\"articleSection\":[\"Articles\"],\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#respond\"]}]},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\",\"url\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\",\"name\":\"What is Technical Debt and how to Manage & Prioritize It?\",\"isPartOf\":{\"@id\":\"https:\/\/tblocks.com\/#website\"},\"datePublished\":\"2022-01-24T17:57:00+00:00\",\"dateModified\":\"2022-11-28T21:31:31+00:00\",\"description\":\"Technical debt occurs when software development teams choose easy, or quick solutions to deliver short-term projects with the idea they will get fixed later.\",\"breadcrumb\":{\"@id\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/tblocks.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Managing And Prioritizing Technical Debt\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/tblocks.com\/#website\",\"url\":\"https:\/\/tblocks.com\/\",\"name\":\"Techblocks\",\"description\":\"Digital Product Engineering, Strategy, and Consulting\",\"publisher\":{\"@id\":\"https:\/\/tblocks.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/tblocks.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Organization\",\"@id\":\"https:\/\/tblocks.com\/#organization\",\"name\":\"Techblocks\",\"url\":\"https:\/\/tblocks.com\/\",\"logo\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tblocks.com\/#\/schema\/logo\/image\/\",\"url\":\"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/10\/tb-logo-dark.svg\",\"contentUrl\":\"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/10\/tb-logo-dark.svg\",\"width\":250,\"height\":60,\"caption\":\"Techblocks\"},\"image\":{\"@id\":\"https:\/\/tblocks.com\/#\/schema\/logo\/image\/\"},\"sameAs\":[\"https:\/\/www.linkedin.com\/company\/246898\/admin\/\",\"https:\/\/www.facebook.com\/TechBlocks\/\",\"https:\/\/twitter.com\/techblocks\"]},{\"@type\":\"Person\",\"@id\":\"https:\/\/tblocks.com\/#\/schema\/person\/aeda39b89c2f748b48ec4c21d59e389b\",\"name\":\"Sabih Siddiqui\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/tblocks.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/d56a6affae134f81924b6524d5eb327f?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/d56a6affae134f81924b6524d5eb327f?s=96&d=mm&r=g\",\"caption\":\"Sabih Siddiqui\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"What is Technical Debt and how to Manage & Prioritize It?","description":"Technical debt occurs when software development teams choose easy, or quick solutions to deliver short-term projects with the idea they will get fixed later.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/","og_locale":"en_US","og_type":"article","og_title":"What is Technical Debt and how to Manage & Prioritize It?","og_description":"Technical debt occurs when software development teams choose easy, or quick solutions to deliver short-term projects with the idea they will get fixed later.","og_url":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/","og_site_name":"Techblocks","article_publisher":"https:\/\/www.facebook.com\/TechBlocks\/","article_published_time":"2022-01-24T17:57:00+00:00","article_modified_time":"2022-11-28T21:31:31+00:00","og_image":[{"width":2560,"height":1209,"url":"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/11\/Tech-Debt-Header-scaled-1.webp","type":"image\/webp"}],"author":"Sabih Siddiqui","twitter_card":"summary_large_image","twitter_creator":"@techblocks","twitter_site":"@techblocks","twitter_misc":{"Written by":"Sabih Siddiqui","Est. reading time":"12 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"Article","@id":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#article","isPartOf":{"@id":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/"},"author":{"name":"Sabih Siddiqui","@id":"https:\/\/tblocks.com\/#\/schema\/person\/aeda39b89c2f748b48ec4c21d59e389b"},"headline":"Managing And Prioritizing Technical Debt","datePublished":"2022-01-24T17:57:00+00:00","dateModified":"2022-11-28T21:31:31+00:00","mainEntityOfPage":{"@id":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/"},"wordCount":2578,"commentCount":0,"publisher":{"@id":"https:\/\/tblocks.com\/#organization"},"articleSection":["Articles"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#respond"]}]},{"@type":"WebPage","@id":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/","url":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/","name":"What is Technical Debt and how to Manage & Prioritize It?","isPartOf":{"@id":"https:\/\/tblocks.com\/#website"},"datePublished":"2022-01-24T17:57:00+00:00","dateModified":"2022-11-28T21:31:31+00:00","description":"Technical debt occurs when software development teams choose easy, or quick solutions to deliver short-term projects with the idea they will get fixed later.","breadcrumb":{"@id":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/tblocks.com\/how-to-manage-and-prioritize-technical-debt\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/tblocks.com\/"},{"@type":"ListItem","position":2,"name":"Managing And Prioritizing Technical Debt"}]},{"@type":"WebSite","@id":"https:\/\/tblocks.com\/#website","url":"https:\/\/tblocks.com\/","name":"Techblocks","description":"Digital Product Engineering, Strategy, and Consulting","publisher":{"@id":"https:\/\/tblocks.com\/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/tblocks.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Organization","@id":"https:\/\/tblocks.com\/#organization","name":"Techblocks","url":"https:\/\/tblocks.com\/","logo":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tblocks.com\/#\/schema\/logo\/image\/","url":"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/10\/tb-logo-dark.svg","contentUrl":"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/10\/tb-logo-dark.svg","width":250,"height":60,"caption":"Techblocks"},"image":{"@id":"https:\/\/tblocks.com\/#\/schema\/logo\/image\/"},"sameAs":["https:\/\/www.linkedin.com\/company\/246898\/admin\/","https:\/\/www.facebook.com\/TechBlocks\/","https:\/\/twitter.com\/techblocks"]},{"@type":"Person","@id":"https:\/\/tblocks.com\/#\/schema\/person\/aeda39b89c2f748b48ec4c21d59e389b","name":"Sabih Siddiqui","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/tblocks.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/d56a6affae134f81924b6524d5eb327f?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/d56a6affae134f81924b6524d5eb327f?s=96&d=mm&r=g","caption":"Sabih Siddiqui"}}]}},"featured_image_url":"https:\/\/tblocks.com\/wp-content\/uploads\/2022\/11\/Tech-Debt-Header-scaled-1-768x363.webp","author_name":"Sabih Siddiqui","category_name":"Articles","solutions":[{"term_id":223,"name":"Quality Engineering Consulting","slug":"qe-consulting","term_group":0,"term_taxonomy_id":223,"taxonomy":"tb_solution","description":"3137","parent":0,"count":6,"filter":"raw"},{"term_id":263,"name":"Strategy Services","slug":"strategy-services","term_group":0,"term_taxonomy_id":263,"taxonomy":"tb_solution","description":"3480","parent":0,"count":6,"filter":"raw"}],"_links":{"self":[{"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/posts\/696"}],"collection":[{"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/users\/9"}],"replies":[{"embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/comments?post=696"}],"version-history":[{"count":9,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/posts\/696\/revisions"}],"predecessor-version":[{"id":8433,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/posts\/696\/revisions\/8433"}],"acf:term":[{"embeddable":true,"taxonomy":"tb_solution","href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/tb_solution\/263"},{"embeddable":true,"taxonomy":"tb_solution","href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/tb_solution\/223"},{"embeddable":true,"taxonomy":"category","href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/categories\/1"}],"acf:post":[{"embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/team\/1099"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/media\/697"}],"wp:attachment":[{"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/media?parent=696"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/categories?post=696"},{"taxonomy":"tb_industry","embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/tb_industry?post=696"},{"taxonomy":"tb_solution","embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/tb_solution?post=696"},{"taxonomy":"tb_technology","embeddable":true,"href":"https:\/\/tblocks.com\/wp-json\/wp\/v2\/tb_technology?post=696"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}